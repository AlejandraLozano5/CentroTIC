# Generated by Django 2.1.7 on 2019-03-29 15:51

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AntennaCharacteristics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.FloatField()),
                ('heightType', models.CharField(choices=[('AGL', 'Above Ground Level'), ('AMSL', 'AMSL: Above Mean Sea Level')], default='AGL', max_length=50)),
                ('antenna_direction', models.CharField(blank=True, max_length=20)),
                ('antenna_radiation_pattern', models.CharField(blank=True, max_length=15)),
                ('antenna_gain', models.FloatField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceCapabilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceDescriptor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serialNumber', models.CharField(max_length=25)),
                ('manufacturerId', models.CharField(max_length=25)),
                ('modelId', models.CharField(max_length=25)),
                ('rulesetIds', django.contrib.postgres.fields.jsonb.JSONField()),
                ('anttenna_characteristics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.AntennaCharacteristics')),
                ('devicecapabilities', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.DeviceCapabilities')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', django.contrib.postgres.fields.jsonb.JSONField()),
                ('operator', django.contrib.postgres.fields.jsonb.JSONField()),
                ('devicedescriptor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.DeviceDescriptor')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceValidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isValid', models.BooleanField()),
                ('reason', models.CharField(max_length=150)),
                ('deviceDesc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.DeviceDescriptor')),
            ],
        ),
        migrations.CreateModel(
            name='Ellipse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semiMajorAxis', models.FloatField()),
                ('semiMinorAxis', models.FloatField()),
                ('orientation', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='EventTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startTime', models.DateTimeField()),
                ('stopTime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='FrequencyRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startHz', models.FloatField()),
                ('stopHz', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Geolocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confidence', models.IntegerField(default=95)),
                ('point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.Ellipse')),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.CharField(max_length=25)),
                ('longitude', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='RulsetInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authority', models.CharField(max_length=50)),
                ('rulsetId', models.CharField(max_length=50)),
                ('maxLocationChange', models.FloatField(blank=True)),
                ('maxPollingSecs', models.FloatField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Spectrum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolutionBwHz', models.FloatField()),
                ('profiles', django.contrib.postgres.fields.jsonb.JSONField()),
                ('geolocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.Geolocation')),
            ],
        ),
        migrations.CreateModel(
            name='SpectrumProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SpectrumProfilePoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hz', models.FloatField()),
                ('dbm', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='SpectrumSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventTime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.EventTime')),
                ('spectrum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.Spectrum')),
            ],
        ),
        migrations.CreateModel(
            name='SpectrumSpec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequencyRanges', django.contrib.postgres.fields.jsonb.JSONField(encoder='')),
                ('needsSpectrumReport', models.BooleanField()),
                ('maxTotalBwHz', models.FloatField(blank=True)),
                ('maxContiguousBwHz', models.FloatField(blank=True)),
                ('geolocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.Geolocation')),
                ('rulsetInfo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.RulsetInfo')),
                ('spectrumSchedules', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.SpectrumSchedule')),
                ('timeRange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.EventTime')),
            ],
        ),
        migrations.AddField(
            model_name='spectrumprofile',
            name='list1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.SpectrumProfilePoint'),
        ),
        migrations.AddField(
            model_name='spectrumprofile',
            name='rulsetinfo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.RulsetInfo'),
        ),
        migrations.AddField(
            model_name='ellipse',
            name='center',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.Point'),
        ),
        migrations.AddField(
            model_name='devicedescriptor',
            name='geolocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.Geolocation'),
        ),
        migrations.AddField(
            model_name='devicecapabilities',
            name='frequencyRanges',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws.FrequencyRange'),
        ),
    ]
